name: Docker Scout
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag hypnos:$(date +%s)
    
      - name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
          sh install-scout.sh
    
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Run Docker Scout
        run: |
          doscker scout cves --ignore-base --format sarif --output hypnos.sarif.json
          
      #- name: Docker Scout
      #  if: ${{ github.event_name == 'pull_request' }}
      #  uses: docker/scout-action@dd36f5b0295baffa006aa6623371f226cc03e506
      #  with:
      #    command: cves
      #    args: --ignore-base --format sarif --output hypnos.sarif.json
      #    image: ${{ github.repository }}:$(date +%s)
      #    ignore-unchanged: true
      #    token: ${{ secrets.DOCKERHUB_PAT }}
          
      - name: Run script
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [[ $(echo hypnos.sarif.json | jq '.runs[0].results | length') -gt 0 ]]; then
            echo "There were vulnerabilities in your Docker image."
            exit 1
          else
            echo "There were no vulnerabilities in your Docker image. Good job!"
            exit 0
          fi

      - name: Create Comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            json=$(cat hypnos.sarif.json)
            const body = `
            **JSON File Content:**
            \`\`\`
            ${JSON.stringify(json, null, 2)}
            \`\`\`
            `;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
